geometry-tilt:
    animated: true
    shaders:
        defines:
            PI: 3.1415926535897932384626433832795
            HALF_PI: 1.5707963267948966192313216916398
        blocks:
            global: |
                mat3 rotateX3D(float phi){
                    return mat3(
                        vec3(1.,0.,0.),
                        vec3(0.,cos(phi),-sin(phi)),
                        vec3(0.,sin(phi),cos(phi)));
                }
                mat3 rotateZ3D(float psi){
                    return mat3(
                        vec3(cos(psi),-sin(psi),0.),
                        vec3(sin(psi),cos(psi),0.),
                        vec3(0.,0.,1.));
                }
            position: |
                float t = u_time*0.1; 
                float z = smoothstep(0.7,1.,max((u_map_position.z)/20.,0.)*0.9);
                position.xyz = rotateX3D(z*HALF_PI) * rotateZ3D(sin(t)*PI*z) * position.xyz;
